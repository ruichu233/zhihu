// Code generated by goctl. DO NOT EDIT.
// Source: chat.proto

package chatclient

import (
	"context"

	"zhihu/app/chat/pb/chat"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetMassagesRequest  = chat.GetMassagesRequest
	GetMassagesResponse = chat.GetMassagesResponse
	MassageInfo         = chat.MassageInfo
	Request             = chat.Request
	Response            = chat.Response
	SendMassageRequest  = chat.SendMassageRequest
	SendMassageResponse = chat.SendMassageResponse

	Chat interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		GetMassages(ctx context.Context, in *GetMassagesRequest, opts ...grpc.CallOption) (*GetMassagesResponse, error)
		SendMassage(ctx context.Context, in *SendMassageRequest, opts ...grpc.CallOption) (*SendMassageResponse, error)
	}

	defaultChat struct {
		cli zrpc.Client
	}
)

func NewChat(cli zrpc.Client) Chat {
	return &defaultChat{
		cli: cli,
	}
}

func (m *defaultChat) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultChat) GetMassages(ctx context.Context, in *GetMassagesRequest, opts ...grpc.CallOption) (*GetMassagesResponse, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.GetMassages(ctx, in, opts...)
}

func (m *defaultChat) SendMassage(ctx context.Context, in *SendMassageRequest, opts ...grpc.CallOption) (*SendMassageResponse, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.SendMassage(ctx, in, opts...)
}
