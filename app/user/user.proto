syntax = "proto3";

package user;
option go_package = "./user";


service User {
  rpc Ping(Request) returns(Response);
  rpc Login(LoginRequest) returns(LoginResponse);
  rpc Register(RegisterRequest) returns(RegisterResponse);
  rpc GetUserInfo(UserInfoRequest) returns(UserInfoResponse);
  rpc GetUserInfoList(UserInfoListRequest) returns(UserInfoListResponse);
  rpc SendVerifyCode(SendVerifyCodeRequest) returns(SendVerifyCodeResponse);
  rpc UserInfoUpdate(UserInfoUpdateRequest) returns(UserInfoUpdateResponse);
  rpc GetAVatarUrl(GetAvatarRequest) returns(GetAvatarResponse);
}

message Request {
  string ping = 1;
}

message Response {
  string pong = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  int64 user_id = 1;
  string access_token = 2;
}

message RegisterRequest {
  string username = 1;
  string password = 2;
  string email = 3;
  string code = 4;
}

message RegisterResponse {
  int64 user_id = 1;
  string access_token = 2;
}

message UserInfoRequest {
  int64 user_id = 1;
}

message UserInfoResponse {
  int64 id = 1;
  string username = 2;
  string email = 3;
  string avatar = 4;
  string signature = 5;
  int64 follower_count = 6;
  int64 followed_count = 7;
}

message UserInfoListRequest{
  repeated int64 user_id_list = 1;
}
message UserInfoListResponse {
  repeated UserInfoResponse user_list = 1;
}

message FindByEmailRequest {
  string email = 1;
}

message FindByEmailResponse {
  int64 user_id = 1;
  string password = 2;
  string username = 3;
  string email = 4;
}

message SendVerifyCodeRequest {
  string email = 1;
}
message SendVerifyCodeResponse {
}
message UserInfoUpdateRequest {
  int64 user_id = 1;
  string username = 2;
  string avatar = 3;
  string signature = 4;
  string old_password = 5;
  string password = 6;
}
message UserInfoUpdateResponse {
  string message = 1;
}

message GetAvatarRequest {
  int64 user_id = 1;
}
message GetAvatarResponse {
  string avatarUrl = 1;
}
