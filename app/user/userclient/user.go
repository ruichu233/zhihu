// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userclient

import (
	"context"

	"zhihu/app/user/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FindByEmailRequest     = user.FindByEmailRequest
	FindByEmailResponse    = user.FindByEmailResponse
	GetAvatarRequest       = user.GetAvatarRequest
	GetAvatarResponse      = user.GetAvatarResponse
	LoginRequest           = user.LoginRequest
	LoginResponse          = user.LoginResponse
	RegisterRequest        = user.RegisterRequest
	RegisterResponse       = user.RegisterResponse
	Request                = user.Request
	Response               = user.Response
	SendVerifyCodeRequest  = user.SendVerifyCodeRequest
	SendVerifyCodeResponse = user.SendVerifyCodeResponse
	UserInfoListRequest    = user.UserInfoListRequest
	UserInfoListResponse   = user.UserInfoListResponse
	UserInfoRequest        = user.UserInfoRequest
	UserInfoResponse       = user.UserInfoResponse
	UserInfoUpdateRequest  = user.UserInfoUpdateRequest
	UserInfoUpdateResponse = user.UserInfoUpdateResponse

	User interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		GetUserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
		GetUserInfoList(ctx context.Context, in *UserInfoListRequest, opts ...grpc.CallOption) (*UserInfoListResponse, error)
		SendVerifyCode(ctx context.Context, in *SendVerifyCodeRequest, opts ...grpc.CallOption) (*SendVerifyCodeResponse, error)
		UserInfoUpdate(ctx context.Context, in *UserInfoUpdateRequest, opts ...grpc.CallOption) (*UserInfoUpdateResponse, error)
		GetAVatarUrl(ctx context.Context, in *GetAvatarRequest, opts ...grpc.CallOption) (*GetAvatarResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultUser) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUser) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUser) GetUserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultUser) GetUserInfoList(ctx context.Context, in *UserInfoListRequest, opts ...grpc.CallOption) (*UserInfoListResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserInfoList(ctx, in, opts...)
}

func (m *defaultUser) SendVerifyCode(ctx context.Context, in *SendVerifyCodeRequest, opts ...grpc.CallOption) (*SendVerifyCodeResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.SendVerifyCode(ctx, in, opts...)
}

func (m *defaultUser) UserInfoUpdate(ctx context.Context, in *UserInfoUpdateRequest, opts ...grpc.CallOption) (*UserInfoUpdateResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UserInfoUpdate(ctx, in, opts...)
}

func (m *defaultUser) GetAVatarUrl(ctx context.Context, in *GetAvatarRequest, opts ...grpc.CallOption) (*GetAvatarResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetAVatarUrl(ctx, in, opts...)
}
