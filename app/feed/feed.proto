syntax = "proto3";

package feed;
option go_package="./feed";

message Request {
  string ping = 1;
}

message Response {
  string pong = 1;
}

// Feed 服务
service Feed {
  rpc Ping(Request) returns(Response);
  // 获取关注者的 Feed
  rpc GetFollowerFeed(GetFollowerFeedRequest) returns (GetFollowerFeedResponse);

  // 获取个性化推荐 Feed
  rpc GetRecommendedFeed(GetRecommendedFeedRequest) returns (GetRecommendedFeedResponse);

  // 当创作者发布新内容时，推送内容发布事件
  rpc PublishContent(PublishContentRequest) returns (PublishContentResponse);

  // 取消关注
  rpc Unfollow(UnfollowRequest) returns (UnfollowResponse);
}

// 拉取关注者 Feed 的请求
message GetFollowerFeedRequest {
  int64 user_id = 1;          // 用户 ID
  int64 cursor = 2;           // 游标，用于分页拉取
  int64 page_size = 3;         // 每页大小
}

// 拉取关注者 Feed 的响应
message GetFollowerFeedResponse {
  repeated int64 items = 1; // 关注者的最新作品列表
  int64 next_cursor = 2;      // 下一页的游标
  bool has_more = 4;           // 是否还有更多内容
}

// 拉取推荐 Feed 的请求
message GetRecommendedFeedRequest {
  int64 user_id = 1;          // 用户 ID
  int64 page = 2;           // 当前第几页
  int64 page_size = 3;         // 每页大小
}

// 拉取推荐 Feed 的响应
message GetRecommendedFeedResponse {
  repeated int64 recommended_items = 1; // 推荐的作品列表
}

// 内容发布事件请求
message PublishContentRequest {
 int64 user_id = 1;
 int64 video_id = 2;
 int64 video_creator_timestamp = 3;
 string video_description = 4;
}

// 内容发布事件响应
message PublishContentResponse {
  bool success = 1;            // 是否发布成功
}

// 取消关注请求
message UnfollowRequest {
  int64 user_id = 1;          // 用户 ID
  int64 creator_id = 2;       // 创作者 ID
}

// 取消关注响应
message UnfollowResponse {
  bool success = 1;            // 是否成功取消关注
}

