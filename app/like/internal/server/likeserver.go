// Code generated by goctl. DO NOT EDIT.
// Source: like.proto

package server

import (
	"context"

	"zhihu/app/like/internal/logic"
	"zhihu/app/like/internal/svc"
	"zhihu/app/like/pb/like"
)

type LikeServer struct {
	svcCtx *svc.ServiceContext
	like.UnimplementedLikeServer
}

func NewLikeServer(svcCtx *svc.ServiceContext) *LikeServer {
	return &LikeServer{
		svcCtx: svcCtx,
	}
}

func (s *LikeServer) Ping(ctx context.Context, in *like.Request) (*like.Response, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

// 点赞/取消点赞
func (s *LikeServer) LikeAction(ctx context.Context, in *like.LikeActionRequest) (*like.LikeActionResponse, error) {
	l := logic.NewLikeActionLogic(ctx, s.svcCtx)
	return l.LikeAction(in)
}

// 查询是否对单obj点过赞
func (s *LikeServer) CheckLikeStatus(ctx context.Context, in *like.CheckLikeStatusRequest) (*like.CheckLikeStatusResponse, error) {
	l := logic.NewCheckLikeStatusLogic(ctx, s.svcCtx)
	return l.CheckLikeStatus(in)
}

// 查询某个稿件的点赞数
func (s *LikeServer) GetPostLikeCount(ctx context.Context, in *like.GetPostLikeCountRequest) (*like.GetPostLikeCountResponse, error) {
	l := logic.NewGetPostLikeCountLogic(ctx, s.svcCtx)
	return l.GetPostLikeCount(in)
}

// 查询某个用户的点赞列表
func (s *LikeServer) GetUserLikes(ctx context.Context, in *like.GetUserLikesRequest) (*like.GetUserLikesResponse, error) {
	l := logic.NewGetUserLikesLogic(ctx, s.svcCtx)
	return l.GetUserLikes(in)
}

// 查询点赞人列表
func (s *LikeServer) GetPostLikers(ctx context.Context, in *like.GetPostLikersRequest) (*like.GetPostLikersResponse, error) {
	l := logic.NewGetPostLikersLogic(ctx, s.svcCtx)
	return l.GetPostLikers(in)
}

// 查询用户收到的总点赞数
func (s *LikeServer) GetUserTotalLikes(ctx context.Context, in *like.GetUserTotalLikesRequest) (*like.GetUserTotalLikesResponse, error) {
	l := logic.NewGetUserTotalLikesLogic(ctx, s.svcCtx)
	return l.GetUserTotalLikes(in)
}
