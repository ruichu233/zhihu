// Code generated by goctl. DO NOT EDIT.
// Source: like.proto

package likeclient

import (
	"context"

	"zhihu/app/like/pb/like"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckLikeStatusRequest    = like.CheckLikeStatusRequest
	CheckLikeStatusResponse   = like.CheckLikeStatusResponse
	GetPostLikeCountRequest   = like.GetPostLikeCountRequest
	GetPostLikeCountResponse  = like.GetPostLikeCountResponse
	GetPostLikersRequest      = like.GetPostLikersRequest
	GetPostLikersResponse     = like.GetPostLikersResponse
	GetUserLikesRequest       = like.GetUserLikesRequest
	GetUserLikesResponse      = like.GetUserLikesResponse
	GetUserTotalLikesRequest  = like.GetUserTotalLikesRequest
	GetUserTotalLikesResponse = like.GetUserTotalLikesResponse
	LikeActionRequest         = like.LikeActionRequest
	LikeActionResponse        = like.LikeActionResponse
	Request                   = like.Request
	Response                  = like.Response

	Like interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		// 点赞/取消点赞
		LikeAction(ctx context.Context, in *LikeActionRequest, opts ...grpc.CallOption) (*LikeActionResponse, error)
		// 查询是否对单obj点过赞
		CheckLikeStatus(ctx context.Context, in *CheckLikeStatusRequest, opts ...grpc.CallOption) (*CheckLikeStatusResponse, error)
		// 查询某个稿件的点赞数
		GetPostLikeCount(ctx context.Context, in *GetPostLikeCountRequest, opts ...grpc.CallOption) (*GetPostLikeCountResponse, error)
		// 查询某个用户的点赞列表
		GetUserLikes(ctx context.Context, in *GetUserLikesRequest, opts ...grpc.CallOption) (*GetUserLikesResponse, error)
		// 查询点赞人列表
		GetPostLikers(ctx context.Context, in *GetPostLikersRequest, opts ...grpc.CallOption) (*GetPostLikersResponse, error)
		// 查询用户收到的总点赞数
		GetUserTotalLikes(ctx context.Context, in *GetUserTotalLikesRequest, opts ...grpc.CallOption) (*GetUserTotalLikesResponse, error)
	}

	defaultLike struct {
		cli zrpc.Client
	}
)

func NewLike(cli zrpc.Client) Like {
	return &defaultLike{
		cli: cli,
	}
}

func (m *defaultLike) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := like.NewLikeClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

// 点赞/取消点赞
func (m *defaultLike) LikeAction(ctx context.Context, in *LikeActionRequest, opts ...grpc.CallOption) (*LikeActionResponse, error) {
	client := like.NewLikeClient(m.cli.Conn())
	return client.LikeAction(ctx, in, opts...)
}

// 查询是否对单obj点过赞
func (m *defaultLike) CheckLikeStatus(ctx context.Context, in *CheckLikeStatusRequest, opts ...grpc.CallOption) (*CheckLikeStatusResponse, error) {
	client := like.NewLikeClient(m.cli.Conn())
	return client.CheckLikeStatus(ctx, in, opts...)
}

// 查询某个稿件的点赞数
func (m *defaultLike) GetPostLikeCount(ctx context.Context, in *GetPostLikeCountRequest, opts ...grpc.CallOption) (*GetPostLikeCountResponse, error) {
	client := like.NewLikeClient(m.cli.Conn())
	return client.GetPostLikeCount(ctx, in, opts...)
}

// 查询某个用户的点赞列表
func (m *defaultLike) GetUserLikes(ctx context.Context, in *GetUserLikesRequest, opts ...grpc.CallOption) (*GetUserLikesResponse, error) {
	client := like.NewLikeClient(m.cli.Conn())
	return client.GetUserLikes(ctx, in, opts...)
}

// 查询点赞人列表
func (m *defaultLike) GetPostLikers(ctx context.Context, in *GetPostLikersRequest, opts ...grpc.CallOption) (*GetPostLikersResponse, error) {
	client := like.NewLikeClient(m.cli.Conn())
	return client.GetPostLikers(ctx, in, opts...)
}

// 查询用户收到的总点赞数
func (m *defaultLike) GetUserTotalLikes(ctx context.Context, in *GetUserTotalLikesRequest, opts ...grpc.CallOption) (*GetUserTotalLikesResponse, error) {
	client := like.NewLikeClient(m.cli.Conn())
	return client.GetUserTotalLikes(ctx, in, opts...)
}
