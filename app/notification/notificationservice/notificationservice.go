// Code generated by goctl. DO NOT EDIT.
// Source: notification.proto

package notificationservice

import (
	"context"

	"zhihu/app/notification/pb/notification"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Notification         = notification.Notification
	NotificationRequest  = notification.NotificationRequest
	NotificationResponse = notification.NotificationResponse

	NotificationService interface {
		GetNotifications(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (*NotificationResponse, error)
	}

	defaultNotificationService struct {
		cli zrpc.Client
	}
)

func NewNotificationService(cli zrpc.Client) NotificationService {
	return &defaultNotificationService{
		cli: cli,
	}
}

func (m *defaultNotificationService) GetNotifications(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (*NotificationResponse, error) {
	client := notification.NewNotificationServiceClient(m.cli.Conn())
	return client.GetNotifications(ctx, in, opts...)
}
