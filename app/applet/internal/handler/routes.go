// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"zhihu/app/applet/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/email-login",
				Handler: EmailLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/email-register",
				Handler: EmailRegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/verification",
				Handler: VerificationHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware, serverCtx.MustLoginMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: UserInfoHandler(serverCtx),
				},
			}...,
		),
		rest.WithSignature(serverCtx.Config.Signature),
		rest.WithPrefix("/v1/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware, serverCtx.MustLoginMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/:video_id/like",
					Handler: LikeActionHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/like"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware, serverCtx.MustLoginMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/:filename",
					Handler: UploadUrlHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/publish",
					Handler: PublishHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/video"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/user/like-list",
					Handler: UserLikeListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/video-list",
					Handler: UserVideoListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/video-list",
					Handler: VideoListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/video"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware, serverCtx.MustLoginMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/comment-list",
					Handler: CommentListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/commment-publish",
					Handler: CommentPublishHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: CommentDeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/comment"),
	)
}
