// Code generated by goctl. DO NOT EDIT.
package types

type ChatMessage struct {
	Id         int64  `json:"id"`
	SenderId   int64  `json:"sender_id"`
	ReceiverId int64  `json:"receiver_id"`
	Content    string `json:"content"`
	CreateTime int64  `json:"create_time"`
}

type ChatRequest struct {
	Type       string `json:"type"`        // message: 消息, heartbeat: 心跳
	ReceiverId int64  `json:"receiver_id"` // 接收者ID
	Content    string `json:"content"`     // 消息内容
}

type ChatResponse struct {
	Type    string `json:"type"` // message: 消息, heartbeat: 心跳
	Message struct {
		Id         int64  `json:"id"`
		SenderId   int64  `json:"sender_id"`
		ReceiverId int64  `json:"receiver_id"`
		Content    string `json:"content"`
		CreateTime int64  `json:"create_time"`
	} `json:"message"` // 消息内容
}

type CommentDeleteRequest struct {
	CommentId int64 `json:"comment_id"`
}

type CommentDeleteResponse struct {
	Status string `json:"status"`
}

type CommentInfo struct {
	Id             int64         `json:"id"`
	ObjId          int64         `json:"objId"`
	UserId         int64         `json:"userId"`
	BeReplayUserId int64         `json:"beReplayUserId"`
	Nickname       string        `json:"nickname"`
	Avatar         string        `json:"avatar"`
	Content        string        `json:"content"`
	AddTime        int64         `json:"addTime"`
	LikeNums       int64         `json:"likeNums"`
	IsLike         uint8         `json:"isLike"`
	SuperNickname  string        `json:"superNickname"`
	SuperCommentId int64         `json:"superCommentId"`
	Children       []CommentInfo `json:"children"`
}

type CommentListRequest struct {
	VideoId int64 `json:"video_id"`
}

type CommentListResponse struct {
	CommentList []CommentInfo `json:"comment_list"`
}

type CommentPublishRequest struct {
	VideoId        int64  `json:"video_id"`
	Content        string `json:"content"`
	SuperCommentId int64  `json:"superCommentId"`
	BeReplayUserId int64  `json:"beReplayUserId"`
}

type CommentPublishResponse struct {
	CommentId int64 `json:"comment_id"`
}

type EmailLoginRequest struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type EmailLoginResponse struct {
	UserId      int64  `json:"user_id"`
	AccessToken string `json:"token"`
}

type EmailRegisterRequest struct {
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type EmailRegisterResponse struct {
	UserId      int64  `json:"user_id"`
	AccessToken string `json:"token"`
}

type FollowActionRequest struct {
	FolloweeId int64 `json:"followee_id"`
	ActionType int32 `json:"action_type"`
}

type FollowActionResponse struct {
	Status string `json:"status"`
}

type FollowInfo struct {
	UserId   int64  `json:"user_id"`
	UserName string `json:"user_name"`
	Avatar   string `json:"avatar"`
}

type GetAvatarRequest struct {
	UserId int64 `path:"user_id"`
}

type GetAvatarResponse struct {
	AvatarUrl string `json:"avatar_url"`
}

type LikeActionRequest struct {
	ActionType int32  `json:"action_type"`
	BizId      string `json:"biz_id"`
	ObjId      int64  `path:"obj_id"` // 对象ID
}

type LikeActionResponse struct {
	Status string `json:"status"`
}

type ListFollowRequest struct {
	UserId     int64 `json:"user_id"`
	FollowType int32 `json:"follow_type"` // 1 朋友 2 粉丝 3 关注
	Cursor     int64 `json:"cursor"`
	PageSize   int64 `json:"page_size"`
	LastId     int64 `json:"last_id"`
}

type ListFollowResponse struct {
	FollowList []FollowInfo `json:"follow_list"`
	Cursor     int64        `json:"cursor"`
	IsEnd      bool         `json:"is_end"`
	LastId     int64        `json:"last_id"`
}

type PublishHandlerRequest struct {
	VideoUrl    string `json:"video_url"`
	CoverUrl    string `json:"cover_url"`
	Title       string `json:"title"`
	Description string `json:"description"`
}

type PublishHandlerResponse struct {
	VideoId int64 `json:"video_id"`
}

type UploadUrlResponse struct {
	VideoUrl string `json:"video_url"`
	CoverUrl string `json:"cover_url"`
}

type UserInfoResponse struct {
	UserId        int64  `json:"user_id"`
	UserName      string `json:"name"`
	Email         string `json:"email"`
	Avatar        string `json:"avatar"`
	Signature     string `json:"signature"`
	FollowerCount int64  `json:"follower_count"`
	FollowedCount int64  `json:"followed_count"`
	IsFollow      bool   `json:"is_follow"`
}

type UserInfoUpdateRequest struct {
	UserId      int64  `path:"user_id"`
	UserName    string `json:"name"`
	Signature   string `json:"signature"`
	Avatar      string `json:"avatar"`
	OldPassword string `json:"old_password"`
	Password    string `json:"password"`
}

type UserInfoUpdateResponse struct {
	Status string `json:"status"`
}

type UserLikeListRequest struct {
	UserId int64 `json:"user_id"`
}

type UserLikeListResponse struct {
	VideoList []VideoInfo `json:"video_list"`
}

type UserVideoListRequest struct {
	UserId int64 `json:"user_id"`
}

type UserVideoListResponse struct {
	VideoList []VideoInfo `json:"video_list"`
}

type VerificationRequest struct {
	Email string `json:"email"`
}

type VerificationResponse struct {
}

type VideoInfo struct {
	VideoId       int64  `json:"video_id"`
	AuthorId      int64  `json:"author_id"`
	AuthorName    string `json:"author_name"`
	AuthorAvatar  string `json:"author_avatar"`
	VideoUrl      string `json:"video_url"`
	Title         string `json:"title"`
	CoverUrl      string `json:"cover_url"`
	Description   string `json:"description"`
	CommentCount  int64  `json:"comment_count"`
	LikeCount     int64  `json:"like_count"`
	IsLike        bool   `json:"is_like"`
	IsInteraction bool   `json:"is_interaction"`
}

type VideoListRequest struct {
	Page     int64 `json:"page"`
	Cursor   int64 `json:"cursor"`
	PageSize int64 `json:"page_size"`
	FeedType int32 `json:"feed_type"`
}

type VideoListResponse struct {
	VideoList []VideoInfo `json:"video_list"`
}
