syntax = "v1"

type (
	EmailRegisterRequest {
		Password string `json:"password"`
		Email    string `json:"email"`
		Code     string `json:"code"`
	}
	EmailRegisterResponse {
		UserId      int64  `json:"user_id"`
		AccessToken string `json:"token"`
	}
	VerificationRequest {
		Email string `json:"email"`
	}
	VerificationResponse  {}
	EmailLoginRequest {
		Email    string `json:"email"`
		Password string `json:"password"`
	}
	EmailLoginResponse {
		UserId      int64  `json:"user_id"`
		AccessToken string `json:"token"`
	}
	UserInfoResponse {
		UserId        int64  `json:"user_id"`
		UserName      string `json:"name"`
		Email         string `json:"email"`
		Avatar        string `json:"avatar"`
		Signature     string `json:"signature"`
		FollowerCount int64  `json:"follower_count"`
		FollowedCount int64  `json:"followed_count"`
		IsFollow      bool   `json:"is_follow"`
	}
)

// 注册
@server (
	prefix: /v1
)
service applet-api {
	@handler EmailRegisterHandler
	post /email-register (EmailRegisterRequest) returns (EmailRegisterResponse)

	@handler VerificationHandler
	post /verification (VerificationRequest) returns (VerificationResponse)

	@handler EmailLoginHandler
	post /email-login (EmailLoginRequest) returns (EmailLoginResponse)
}

// 用户信息
@server (
	prefix:     /v1/user
	signature:  true
	middleware: AuthMiddleware
)
service applet-api {
	@handler UserInfoHandler
	get /:user_id returns (UserInfoResponse)

	@handler UserInfoUpdateHandler
	post /:user_id/update (UserInfoUpdateRequest) returns (UserInfoUpdateResponse)

	@handler GetAvatarHandler
	get /:user_id/avatar (GetAvatarRequest) returns (GetAvatarResponse)
}

type (
	UserInfoUpdateRequest {
		UserId      int64  `path:"user_id"`
		UserName    string `json:"name"`
		Signature   string `json:"signature"`
		Avatar      string `json:"avatar"`
		OldPassword string `json:"old_password"`
		Password    string `json:"password"`
	}
	UserInfoUpdateResponse {
		status string `json:"status"`
	}
	GetAvatarRequest {
		UserId int64 `path:"user_id"`
	}
	GetAvatarResponse {
		AvatarUrl string `json:"avatar_url"`
	}
)

// 点赞
@server (
	prefix:     /v1/like
	middleware: AuthMiddleware,MustLoginMiddleware
)
service applet-api {
	@handler LikeActionHandler
	post /:video_id/like (LikeActionRequest) returns (LikeActionResponse)
}

type LikeActionRequest {
	actionType int32  `json:"action_type"`
	bizId      string `json:"biz_id"`
	objId      int64  `path:"obj_id"` // 对象ID
}

type LikeActionResponse {
	status string `json:"status"`
}

@server (
	prefix:     /v1/video
	middleware: AuthMiddleware,MustLoginMiddleware
)
service applet-api {
	// 获取上传视频的url
	@handler UploadUrlHandler
	get /:filename returns (UploadUrlResponse)

	// 上传视频记录
	@handler PublishHandler
	post /publish (PublishHandlerRequest) returns (PublishHandlerResponse)
}

type (
	UploadUrlResponse {
		VideoUrl string `json:"video_url"`
		CoverUrl string `json:"cover_url"`
	}
	PublishHandlerRequest {
		VideoUrl    string `json:"video_url"`
		CoverUrl    string `json:"cover_url"`
		Title       string `json:"title"`
		Description string `json:"description"`
	}
	PublishHandlerResponse {
		VideoId int64 `json:"video_id"`
	}
)

@server (
	prefix:     /v1/video
	middleware: AuthMiddleware
)
service applet-api {
	// 获取视频列表
	@handler VideoListHandler
	post /video-list (VideoListRequest) returns (VideoListResponse)

	// 获取用户的作品列表
	@handler UserVideoListHandler
	post /user/video-list (UserVideoListRequest) returns (UserVideoListResponse)

	// 获取用户的喜欢列表
	@handler UserLikeListHandler
	post /user/like-list (UserLikeListRequest) returns (UserLikeListResponse)
}

type (
	VideoListRequest {
		page     int64 `json:"page"`
		cursor   int64 `json:"cursor"`
		pageSize int64 `json:"page_size"`
		feedType int32 `json:"feed_type"`
	}
	VideoListResponse {
		VideoList []VideoInfo `json:"video_list"`
	}
	UserVideoListRequest {
		UserId int64 `json:"user_id"`
	}
	UserVideoListResponse {
		VideoList []VideoInfo `json:"video_list"`
	}
	UserLikeListRequest {
		UserId int64 `json:"user_id"`
	}
	UserLikeListResponse {
		VideoList []VideoInfo `json:"video_list"`
	}
)

type VideoInfo {
	VideoId       int64  `json:"video_id"`
	AuthorId      int64  `json:"author_id"`
	AuthorName    string `json:"author_name"`
	AuthorAvatar  string `json:"author_avatar"`
	VideoUrl      string `json:"video_url"`
	Title         string `json:"title"`
	CoverUrl      string `json:"cover_url"`
	Description   string `json:"description"`
	CommentCount  int64  `json:"comment_count"`
	LikeCount     int64  `json:"like_count"`
	IsLike        bool   `json:"is_like"`
	IsInteraction bool   `json:"is_interaction"`
}

// 评论
@server (
	prefix:     /v1/comment
	middleware: AuthMiddleware,MustLoginMiddleware
)
service applet-api {
	// 评论列表
	@handler CommentListHandler
	post /comment-list (CommentListRequest) returns (CommentListResponse)

	// 发布评论
	@handler CommentPublishHandler
	post /commment-publish (CommentPublishRequest) returns (CommentPublishResponse)

	// 删除评论
	@handler CommentDeleteHandler
	post /delete (CommentDeleteRequest) returns (CommentDeleteResponse)
}

type (
	CommentListRequest {
		VideoId int64 `json:"video_id"`
	}
	CommentListResponse {
		CommentList []CommentInfo `json:"comment_list"`
	}
	CommentInfo {
		Id             int64         `json:"id"`
		ObjId          int64         `json:"objId"`
		UserId         int64         `json:"userId"`
		BeReplayUserId int64         `json:"beReplayUserId"`
		Nickname       string        `json:"nickname"`
		Avatar         string        `json:"avatar"`
		Content        string        `json:"content"`
		AddTime        int64         `json:"addTime"`
		LikeNums       int64         `json:"likeNums"`
		IsLike         uint8         `json:"isLike"`
		SuperNickname  string        `json:"superNickname"`
		SuperCommentId int64         `json:"superCommentId"`
		Children       []CommentInfo `json:"children"`
	}
	CommentPublishRequest {
		VideoId        int64  `json:"video_id"`
		Content        string `json:"content"`
		SuperCommentId int64  `json:"superCommentId"`
		BeReplayUserId int64  `json:"beReplayUserId"`
	}
	CommentPublishResponse {
		CommentId int64 `json:"comment_id"`
	}
	CommentDeleteRequest {
		CommentId int64 `json:"comment_id"`
	}
	CommentDeleteResponse {
		Status string `json:"status"`
	}
)

// 关注服务
@server (
	prefix:     /v1/follow
	middleware: AuthMiddleware,MustLoginMiddleware
)
service applet-api {
	// 关注/取消关注
	@handler FollowActionHandler
	post /follow-action (FollowActionRequest) returns (FollowActionResponse)

	// 关注列表/ 粉丝列表/ 朋友列表
	@handler ListFollowHandler
	post /follow-list (ListFollowRequest) returns (ListFollowResponse)
}

type (
	FollowActionRequest {
		FolloweeId int64 `json:"followee_id"`
		ActionType int32 `json:"action_type"`
	}
	FollowActionResponse {
		Status string `json:"status"`
	}
	ListFollowRequest {
		UserId     int64 `json:"user_id"`
		followType int32 `json:"follow_type"` // 1 朋友 2 粉丝 3 关注
		Cursor     int64 `json:"cursor"`
		PageSize   int64 `json:"page_size"`
		LastId     int64 `json:"last_id"`
	}
	ListFollowResponse {
		FollowList []FollowInfo `json:"follow_list"`
		Cursor     int64        `json:"cursor"`
		IsEnd      bool         `json:"is_end"`
		LastId     int64        `json:"last_id"`
	}
	FollowInfo {
		UserId   int64  `json:"user_id"`
		UserName string `json:"user_name"`
		Avatar   string `json:"avatar"`
	}
)

// WebSocket聊天服务
@server (
	prefix: /v1/ws
)
service applet-api {
	@handler ChatConnectHandler
	get /chat/connect/:user_id
}

type (
	ChatMessage {
		Id         int64  `json:"id"`
		SenderId   int64  `json:"sender_id"`
		ReceiverId int64  `json:"receiver_id"`
		Content    string `json:"content"`
		CreateTime int64  `json:"create_time"`
	}
	ChatRequest {
		Type       string `json:"type"` // message: 消息, heartbeat: 心跳
		ReceiverId int64  `json:"receiver_id"` // 接收者ID
		Content    string `json:"content"` // 消息内容
	}
	ChatResponse {
		Type    string      `json:"type"` // message: 消息, heartbeat: 心跳
		Message ChatMessage `json:"message"` // 消息内容
	}
)

